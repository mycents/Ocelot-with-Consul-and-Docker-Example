version: '3.4'

services:
  consul:
    image: consul:1.15.4
    command: consul agent -dev -log-level=warn -ui -client=0.0.0.0
    hostname: consul
    ports:
      - "8500:8500"  
  
  gateway-api:
    image: ${DOCKER_REGISTRY-}gatewayapi
    build:
      context: .
      dockerfile: Gateway.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ServiceConfig__serviceDiscoveryAddress=http://consul1:8500
      - ServiceConfig__serviceAddress=http://gateway-api:8080
      - ServiceConfig__serviceName=gateway
    ports:
      - "8080"      
    depends_on:
      - consul

  catalogs-api:
    image: ${DOCKER_REGISTRY-}catalogsapi
    build:
      context: .
      dockerfile: Catalogs.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ServiceConfig__serviceDiscoveryAddress=http://consul:8500
      - ServiceConfig__serviceAddress=http://catalogs-api:8080
      - ServiceConfig__serviceName=catalogs
    deploy:
      replicas: 3
    ports:
      - "8080"      
    depends_on:
      - consul

  deliveries-api:
    image: ${DOCKER_REGISTRY-}deliveriesapi
    build:
      context: .
      dockerfile: Deliveries.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ServiceConfig__serviceDiscoveryAddress=http://consul:8500
      - ServiceConfig__serviceAddress=http://deliveries-api:8080
      - ServiceConfig__serviceName=deliveries
    deploy:
      replicas: 3
    ports:
      - "8080"      
    depends_on:
      - consul

  orders-api:
    image: ${DOCKER_REGISTRY-}ordersapi
    build:
      context: .
      dockerfile: Orders.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ServiceConfig__serviceDiscoveryAddress=http://consul:8500
      - ServiceConfig__serviceAddress=http://orders-api:8080
      - ServiceConfig__serviceName=orders
    deploy:
      replicas: 3
    ports:
      - "8080"      
    depends_on:
      - consul

  payments-api:
    image: ${DOCKER_REGISTRY-}paymentsapi
    build:
      context: .
      dockerfile: Payments.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ServiceConfig__serviceDiscoveryAddress=http://consul:8500
      - ServiceConfig__serviceAddress=http://payments-api:8080
      - ServiceConfig__serviceName=payments
    deploy:
      replicas: 3
    ports:
      - "8080"      
    depends_on:
      - consul

  stock-api:
    image: ${DOCKER_REGISTRY-}stockapi
    build:
      context: .
      dockerfile: Stock.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ServiceConfig__serviceDiscoveryAddress=http://consul:8500
      - ServiceConfig__serviceAddress=http://stock-api:8080
      - ServiceConfig__serviceName=stock
    deploy:
      replicas: 3
    ports:
      - "8080"      
    depends_on:
      - consul 